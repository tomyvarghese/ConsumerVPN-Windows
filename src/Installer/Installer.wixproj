<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" InitialTargets="EnsureWixToolsetInstalled" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">x86</Platform>
    <ProductVersion>3.10</ProductVersion>
    <ProjectGuid>170d4d40-19a3-4a6e-883b-e6926248ec2f</ProjectGuid>
    <SchemaVersion>2.0</SchemaVersion>
    <OutputName>Installer</OutputName>
    <OutputType>Package</OutputType>
    <RunPostBuildEvent>OnOutputUpdated</RunPostBuildEvent>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <IntermediateOutputPath>obj\$(Configuration)\</IntermediateOutputPath>
    <DefineConstants>Debug;</DefineConstants>
    <WixVariables>
    </WixVariables>
    <SuppressValidation>False</SuppressValidation>
    <TreatWarningsAsErrors>False</TreatWarningsAsErrors>
    <VerboseOutput>False</VerboseOutput>
    <LeaveTemporaryFiles>False</LeaveTemporaryFiles>
    <SuppressPdbOutput>False</SuppressPdbOutput>
    <SuppressAllWarnings>False</SuppressAllWarnings>
    <Pedantic>True</Pedantic>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <IntermediateOutputPath>obj\$(Configuration)\</IntermediateOutputPath>
  </PropertyGroup>
  <ItemGroup>
    <WixExtension Include="WixNetFxExtension">
      <HintPath>$(WixExtDir)\WixNetFxExtension.dll</HintPath>
      <Name>WixNetFxExtension</Name>
    </WixExtension>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="FilesFragment.wxs" />
    <Compile Include="Product.wxs" />
    <Content Include="Filters.xslt" />
    <Content Include="Settings.wxi" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\VpnSDK.WLVpn\VpnSDK.WLVpn.csproj">
      <Name>VpnSDK.WLVpn</Name>
      <Project>{3d2766a7-0d71-4f97-888e-be30623e68f0}</Project>
      <Private>True</Private>
      <DoNotHarvest>
      </DoNotHarvest>
      <RefProjectOutputGroups>Binaries;Content;Satellites</RefProjectOutputGroups>
      <RefTargetDir>INSTALLFOLDER</RefTargetDir>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(WixTargetsPath)" Condition=" '$(WixTargetsPath)' != '' " />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\WiX\v3.x\Wix.targets" Condition=" '$(WixTargetsPath)' == '' AND Exists('$(MSBuildExtensionsPath32)\Microsoft\WiX\v3.x\Wix.targets') " />
  <Target Name="EnsureWixToolsetInstalled" Condition=" '$(WixTargetsImported)' != 'true' ">
    <Error Text="The WiX Toolset v3.11 (or newer) build tools must be installed to build this project. To download the WiX Toolset, see http://wixtoolset.org/releases/" />
  </Target>
  <PropertyGroup>
    <PreBuildEvent />
  </PropertyGroup>
  <!--
	To modify your build process, add your task inside one of the targets below and uncomment it.
	Other similar extension points exist, see Wix.targets.
	<Target Name="AfterBuild">
	</Target>
	-->
  <Target Name="BeforeBuild">
    <PropertyGroup>
      <DefineConstants>
        TARGET_FOLDER=$(SolutionDir)src\VpnSDK.WLVpn\bin\$(Configuration)
      </DefineConstants>
    </PropertyGroup>
    <HeatDirectory RunAsSeparateProcess="true" OutputFile="$(ProjectDir)FilesFragment.wxs" Directory="$(SolutionDir)\src\VpnSDK.WLVpn\bin\$(Configuration)\" DirectoryRefId="ApplicationDirectory" ComponentGroupName="InstallComponents" ToolPath="$(WixToolPath)" PreprocessorVariable="var.TARGET_FOLDER" SuppressRootDirectory="true" AutogenerateGuids="true" Transforms="$(ProjectDir)Filters.xslt" />
  </Target>
  <PropertyGroup>
    <PostBuildEvent>if "$(ConfigurationName)" == "Release" (
    if "$(UsesEVCert)" == "True" (
            "$(SolutionDir)Prerequisites\signtool" sign /td sha256 /fd sha256 /tr http://timestamp.digicert.com /v /a $(TargetFileName)
    ) ELSE (
        if "$(CertificatePassword)" == "" (
            "$(SolutionDir)Prerequisites\signtool" sign /f "$(SolutionDir)Resources\Signing\cert.pfx" /t http://timestamp.digicert.com /v $(TargetFileName)
        ) ELSE (
            "$(SolutionDir)Prerequisites\signtool" sign /f "$(SolutionDir)Resources\Signing\cert.pfx" /p $(CertificatePassword) /t http://timestamp.digicert.com /v $(TargetFileName)
        )
    )
)</PostBuildEvent>
  </PropertyGroup>
</Project>